{"version":3,"sources":["components/Button/index.js","constants.js","components/Card/index.js","components/Modal/index.js","components/Input/index.js","App.js","index.js"],"names":["Button","onClick","value","rest","className","MODE","TYPES_MSG","Card","mode","id","url","data-id","src","ModalWindow","children","onClose","forwardRef","ref","Modal","Input","placeholder","onChange","type","isRequired","required","App","useState","data","setData","isLoading","setIsLoading","imageData","setImageData","isOpenModal","setIsOpenModal","setComment","setUserName","modalRef","useRef","inputValues","setInputValues","useEffect","fetchImages","items","a","fetch","method","response","json","console","error","clickImageHandler","ev","parseInt","target","dataset","fetchImageData","inputChangeHandler","log","getFormattedDate","timestamp","day","Date","getDate","initMonth","getMonth","month","year","getFullYear","setComments","body","JSON","stringify","name","comment","map","comments","key","date","getCommentTemplate","text","style","marginTop","disabled","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edc9efba.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\n\nexport const Button = ({ onClick, value, ...rest }) => {\n    return (\n        <button onClick={onClick} className=\"Button-base\" {...rest}>\n            {value}\n        </button>\n    );\n};\n","export const MODE = {\n    DISPLAY: 'display',\n    EDIT: 'edit',\n};\n\nexport const TYPES_MSG = {\n    NAME: 'name',\n    COMMENT: 'comment',\n};\n","import React from 'react';\nimport { MODE } from './../../constants';\nimport './index.css';\n\nexport const Card = ({ mode, id = '', url = '', onClick, className = '', ...rest }) => {\n    return (\n        <img\n            className={`Card-image ${className}`}\n            data-id={id}\n            src={url}\n            {...(mode === MODE.EDIT ? (onClick = { onClick }) : '')}\n            {...rest}\n        />\n    );\n};\n","import React, { forwardRef } from 'react';\nimport './index.css';\n\nconst ModalWindow = ({ children, onClose, forwardRef }) => {\n    return (\n        <>\n            <div className=\"modal-background\" onClick={onClose}></div>\n            <div ref={forwardRef} className=\"modal\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-cross\" onClick={onClose}></div>\n                    {children}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport const Modal = forwardRef(({ children, ...rest }, ref) => {\n    return (\n        <ModalWindow forwardRef={ref} {...rest}>\n            {children}\n        </ModalWindow>\n    );\n});\n","import React from 'react';\nimport './index.css';\n\nexport const Input = ({ placeholder, onChange, type, isRequired, ...rest }) => {\n    return (\n        <input\n            type={type}\n            onChange={onChange}\n            placeholder={placeholder}\n            className=\"input\"\n            required={isRequired ? 'required' : ''}\n            {...rest}\n        />\n    );\n};\n","import React, { useEffect, useState, useRef } from 'react';\nimport { Card, Button, Modal, Input } from './components';\nimport { MODE, TYPES_MSG } from './constants';\nimport './App.css';\n\nconst App = () => {\n    const url = 'https://boiling-refuge-66454.herokuapp.com/images';\n    const [data, setData] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [imageData, setImageData] = useState({});\n    const [isOpenModal, setIsOpenModal] = useState(false);\n    const [comment, setComment] = useState('');\n    const [userName, setUserName] = useState('');\n    const modalRef = useRef(null);\n    const [inputValues, setInputValues] = useState({\n        [TYPES_MSG.COMMENT]: '',\n        [TYPES_MSG.NAME]: '',\n    });\n\n    useEffect(() => {\n        fetchImages();\n    }, []);\n\n    const fetchImages = async () => {\n        try {\n            const response = await fetch(url, { method: 'GET' });\n            const data = await response.json();\n            setData(data);\n        } catch (e) {\n            console.error(e);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const getNowYear = () => {\n        return new Date().getFullYear();\n    };\n\n    const clickImageHandler = async (ev) => {\n        const id = parseInt(ev.target.dataset.id, 10);\n        await fetchImageData(id);\n    };\n\n    const fetchImageData = async (id) => {\n        try {\n            const response = await fetch(`${url}/${id}`, { method: 'GET' });\n            const data = await response.json();\n            setImageData(data);\n            setIsOpenModal(true);\n        } catch (e) {\n            console.error(e);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const getImageCards = (items) => {\n        return items.map(({ id, url }) => {\n            return <Card key={id} mode={MODE.EDIT} id={id} url={url} onClick={clickImageHandler} />;\n        });\n    };\n\n    const inputChangeHandler = (ev, type) => {\n        console.log(ev.target.value, type);\n        setInputValues({ ...inputValues, [type]: ev.target.value });\n    };\n\n    const getFormattedDate = (timestamp) => {\n        const day =\n            new Date(timestamp).getDate() < 10\n                ? `0${new Date(timestamp).getDate()}`\n                : new Date(timestamp).getDate();\n        const initMonth = new Date(timestamp).getMonth() + 1;\n        const month = initMonth < 10 ? `0${initMonth}` : initMonth;\n        const year = new Date(timestamp).getFullYear();\n\n        return `${day}.${month}.${year}`;\n    };\n\n    const getCommentTemplate = ({ key, date, comment }) => {\n        return (\n            <div key={key} className=\"comment-content\">\n                <span className=\"comment-date\">{getFormattedDate(date)}</span>\n                <span className=\"comment\">{comment}</span>\n            </div>\n        );\n    };\n\n    const onModalClose = () => {\n        setIsOpenModal(false);\n        setUserName('');\n        setComment('');\n        setInputValues({ [TYPES_MSG.NAME]: '', [TYPES_MSG.COMMENT]: '' });\n    };\n\n    const setComments = async () => {\n        const response = await fetch(`${url}/${imageData.id}/comments`, {\n            method: 'POST',\n            body: JSON.stringify({\n                name: inputValues[TYPES_MSG.NAME],\n                comment: inputValues[TYPES_MSG.COMMENT],\n            }),\n        });\n        console.log(response);\n    };\n\n    if (isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"App\">\n            <h1 className=\"App-title\">TEST APP</h1>\n            <main className=\"App-content\">{getImageCards(data)}</main>\n            {isOpenModal && (\n                <Modal ref={modalRef} onClose={onModalClose}>\n                    <div className=\"modal-form\">\n                        <div className=\"modal-inner\">\n                            <div className=\"left-side\">\n                                <Card\n                                    mode={MODE.DISPLAY}\n                                    id={imageData.id}\n                                    url={imageData.url}\n                                    className=\"modal-image\"\n                                />\n                            </div>\n                            <div className=\"right-side\">\n                                {imageData.comments.map(({ id: key, date, text: comment }) => {\n                                    return getCommentTemplate({ key, date, comment });\n                                })}\n                            </div>\n                        </div>\n                        <div className=\"left-side\">\n                            <Input\n                                type=\"text\"\n                                placeholder=\"Ваше имя\"\n                                onChange={(ev) => inputChangeHandler(ev, TYPES_MSG.NAME)}\n                                style={{ marginTop: '30px' }}\n                            />\n                            <Input\n                                type=\"text\"\n                                placeholder=\"Ваш комментарий\"\n                                onChange={(ev) => inputChangeHandler(ev, TYPES_MSG.COMMENT)}\n                                style={{ marginTop: '20px' }}\n                            />\n                            <Button\n                                value=\"Оставить комментарий\"\n                                onClick={setComments}\n                                style={{ marginTop: '20px' }}\n                                disabled={\n                                    !inputValues[TYPES_MSG.NAME].length &&\n                                    !inputValues[TYPES_MSG.COMMENT].length\n                                }\n                            />\n                        </div>\n                    </div>\n                </Modal>\n            )}\n            <footer className=\"App-footer\">\n                <h5 className=\"App-footer-title\">© 2018-{getNowYear()}</h5>\n            </footer>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}